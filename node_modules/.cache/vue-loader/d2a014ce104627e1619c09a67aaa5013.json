{"remainingRequest":"/Users/alejandro/Documents/worktrials/ine/beerapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alejandro/Documents/worktrials/ine/beerapp/src/components/Sidebar.vue?vue&type=style&index=0&id=7d622f5c&scoped=true&lang=scss&","dependencies":[{"path":"/Users/alejandro/Documents/worktrials/ine/beerapp/src/components/Sidebar.vue","mtime":1572209411557},{"path":"/Users/alejandro/Documents/worktrials/ine/beerapp/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alejandro/Documents/worktrials/ine/beerapp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/alejandro/Documents/worktrials/ine/beerapp/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/alejandro/Documents/worktrials/ine/beerapp/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alejandro/Documents/worktrials/ine/beerapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alejandro/Documents/worktrials/ine/beerapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNsb3NlLWxpbmsgewogIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50Owp9CkBtZWRpYSBzY3JlZW4gewogIAp9Cg=="},{"version":3,"sources":["Sidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;AACA;AACA;;AAEA","file":"Sidebar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <sui-sidebar\n    :visible=\"sidebarVisible\"\n    animation=\"overlay\"\n    :direction=\"from\"\n    :class=\"`ui vertical ${width} sidebar`\"\n  >\n    <div :class=\"`ui segment attached ${oposite} aligned close-link`\" @click.stop=\"toggleSidebar()\"><i class=\"close link icon\"></i></div>\n    <div class=\"ui fixed\">\n      <slot></slot>\n    </div>\n    \n  </sui-sidebar>\n</template>\n\n<script>\n\nexport default {\n  name: \"sidebar\",\n  props: {\n    toggleSidebar: {\n      type: Function,\n      required: true\n    },\n    sidebarVisible: {\n      type: Boolean,\n      required: true\n    },\n    from: {\n      type: String,\n      required: false,\n      default: () => {\n        return 'right'\n      }\n    },\n    width: {\n      type: String,\n      required: false,\n      default: () => {\n        return 'wide'\n      }\n    }\n  },\n  computed: {\n    oposite () {\n      return this.from === 'left' ? 'right' : 'left'\n    }\n  }\n};\n</script>\n<style scoped lang=\"scss\">\n.close-link {\n  border: none !important;\n}\n@media screen {\n  \n}\n</style>"]}]}