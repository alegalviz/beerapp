{"remainingRequest":"/Users/alejandro/Documents/worktrials/ine/beerapp/node_modules/babel-loader/lib/index.js!/Users/alejandro/Documents/worktrials/ine/beerapp/node_modules/eslint-loader/index.js??ref--13-0!/Users/alejandro/Documents/worktrials/ine/beerapp/src/services/punkapi.service.js","dependencies":[{"path":"/Users/alejandro/Documents/worktrials/ine/beerapp/src/services/punkapi.service.js","mtime":1572223061247},{"path":"/Users/alejandro/Documents/worktrials/ine/beerapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alejandro/Documents/worktrials/ine/beerapp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/alejandro/Documents/worktrials/ine/beerapp/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcyI7CmltcG9ydCBfc2xpY2VkVG9BcnJheSBmcm9tICIvVXNlcnMvYWxlamFuZHJvL0RvY3VtZW50cy93b3JrdHJpYWxzL2luZS9iZWVyYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMzL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvYWxlamFuZHJvL0RvY3VtZW50cy93b3JrdHJpYWxzL2luZS9iZWVyYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMzL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLyBBUEkgYmFzZSBVUkwKdmFyIEJBU0VfVVJMID0gJ2h0dHBzOi8vYXBpLnB1bmthcGkuY29tL3YyJzsKLyoKICogQHBhcmFtcyBBcnJheQogKiBEZXNjcmlwdGlvbjogRmV0Y2ggYmVlcnMgZnJvbSBicHVua2FwaSB3aXRoIHBhcmFtcy4gUGFyYW0gbGlzdCBmcm9tIGRvY3VtZW50YXRpb24uCiAqIFJldHVybnMgYSBwcm9taXNlCiAqLwoKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKCkgewogIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIF9yZWYoKSB7CiAgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgdmFyIHBhcmFtcywKICAgICAgICBwYXJhbXNJbnRlcmZhY2UsCiAgICAgICAgcGFyYW1zUVMsCiAgICAgICAgcGFyYW1zUU0sCiAgICAgICAgcmVzcG9uc2UsCiAgICAgICAgX2FyZ3MgPSBhcmd1bWVudHM7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHBhcmFtcyA9IF9hcmdzLmxlbmd0aCA+IDAgJiYgX2FyZ3NbMF0gIT09IHVuZGVmaW5lZCA/IF9hcmdzWzBdIDogW107CiAgICAgICAgICAgIHBhcmFtc0ludGVyZmFjZSA9IFsnYWJ2X2d0JywgJ2Fidl9sdCcsICdpYnVfZ3QnLCAnaWJ1X2x0JywgJ2ViY19ndCcsICdlYmNfbHQnLCAnYmVlcl9uYW1lJywgJ3llYXN0JywgJ2JyZXdlZF9iZWZvcmUnLCAnYnJld2VkX2FmdGVyJywgJ2hvcHMnLCAnbWFsdCcsICdmb29kJywgJ3BhZ2UnLCAncGVyX3BhZ2UnLCAnaWRzJ107CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAyOwogICAgICAgICAgICAvLyBSZWR1Y2UgZnVuY3Rpb24gdG8gY3JlYXRlIHRoZSBxdWVyeSBzdHJpbmcsIGNoZWNraW5nIGF2YWlsYWJsZSBhcGkgcGFyYW1zCiAgICAgICAgICAgIHBhcmFtc1FTID0gcGFyYW1zLnJlZHVjZShmdW5jdGlvbiAoYWN1LCBhY3R1YWwpIHsKICAgICAgICAgICAgICB2YXIgX2FjdHVhbCA9IF9zbGljZWRUb0FycmF5KGFjdHVhbCwgMiksCiAgICAgICAgICAgICAgICAgIGtleSA9IF9hY3R1YWxbMF0sCiAgICAgICAgICAgICAgICAgIHZhbHVlID0gX2FjdHVhbFsxXTsKCiAgICAgICAgICAgICAgaWYgKHBhcmFtc0ludGVyZmFjZS5pbmNsdWRlcyhrZXkpICYmIHZhbHVlKSB7CiAgICAgICAgICAgICAgICBhY3UucHVzaCgiIi5jb25jYXQoa2V5LCAiPSIpLmNvbmNhdCh2YWx1ZSkpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0dXJuIGFjdTsKICAgICAgICAgICAgfSwgW10pLmpvaW4oJyYnKTsKICAgICAgICAgICAgcGFyYW1zUU0gPSBwYXJhbXNRUyA/ICc/JyA6ICcnOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgcmV0dXJuIGZldGNoKCIiLmNvbmNhdChCQVNFX1VSTCwgIi9iZWVycyIpLmNvbmNhdChwYXJhbXNRTSkuY29uY2F0KHBhcmFtc1FTKSk7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMDsKICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dC5zZW50KTsKCiAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTM7CiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMik7CiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZQogICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMiwgMTNdXSk7CiAgfSkpOwogIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0="},{"version":3,"sources":["/Users/alejandro/Documents/worktrials/ine/beerapp/src/services/punkapi.service.js"],"names":["BASE_URL","params","paramsInterface","paramsQS","reduce","acu","actual","key","value","includes","push","join","paramsQM","fetch","response","json","console","error"],"mappings":";;;;;;;;;AAAA;AACA,IAAMA,QAAQ,GAAG,4BAAjB;AAEA;;;;;;AAKA;AAAA;AAAA;;;;;0BAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBC,YAAAA,MAAhB,2DAAyB,EAAzB;AACPC,YAAAA,eADO,GACW,CACtB,QADsB,EACZ,QADY,EACF,QADE,EACQ,QADR,EACkB,QADlB,EAC4B,QAD5B,EACsC,WADtC,EAEtB,OAFsB,EAEb,eAFa,EAEI,cAFJ,EAEoB,MAFpB,EAE4B,MAF5B,EAEoC,MAFpC,EAE4C,MAF5C,EAEoD,UAFpD,EAEgE,KAFhE,CADX;AAAA;AAMX;AACIC,YAAAA,QAPO,GAOIF,MAAM,CAACG,MAAP,CAAc,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAAA,2CACzBA,MADyB;AAAA,kBACvCC,GADuC;AAAA,kBAClCC,KADkC;;AAE5C,kBAAIN,eAAe,CAACO,QAAhB,CAAyBF,GAAzB,KAAiCC,KAArC,EAA4C;AAC1CH,gBAAAA,GAAG,CAACK,IAAJ,WAAYH,GAAZ,cAAmBC,KAAnB;AACD;;AACD,qBAAOH,GAAP;AACD,aANc,EAMZ,EANY,EAMRM,IANQ,CAMH,GANG,CAPJ;AAePC,YAAAA,QAfO,GAeIT,QAAQ,GAAG,GAAH,GAAS,EAfrB;AAAA;AAAA,mBAiBYU,KAAK,WAAIb,QAAJ,mBAAqBY,QAArB,SAAgCT,QAAhC,EAjBjB;;AAAA;AAiBLW,YAAAA,QAjBK;AAAA;AAAA,mBAkBEA,QAAQ,CAACC,IAAT,EAlBF;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAoBX;AACAC,YAAAA,OAAO,CAACC,KAAR;;AArBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["// API base URL\nconst BASE_URL = 'https://api.punkapi.com/v2'\n\n/*\n * @params Array\n * Description: Fetch beers from bpunkapi with params. Param list from documentation.\n * Returns a promise\n */\nexport default async function (params = []) {\n  const paramsInterface = [\n    'abv_gt', 'abv_lt', 'ibu_gt', 'ibu_lt', 'ebc_gt', 'ebc_lt', 'beer_name',\n    'yeast', 'brewed_before', 'brewed_after', 'hops', 'malt', 'food', 'page', 'per_page', 'ids'\n  ]\n  try {\n    // Reduce function to create the query string, checking available api params\n    let paramsQS = params.reduce((acu, actual) => {\n      let [key, value] = actual\n      if (paramsInterface.includes(key) && value) {\n        acu.push(`${key}=${value}`)\n      }\n      return acu\n    }, []).join('&')\n\n    let paramsQM = paramsQS ? '?' : ''\n\n    const response = await fetch(`${BASE_URL}/beers${paramsQM}${paramsQS}`)\n    return await response.json();\n  } catch (error) {\n    // eslint-disable-next-line\n    console.error(error)\n  }\n}"]}]}